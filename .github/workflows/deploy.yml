name: Prod-Deploy

on:
  release:
    types: [released]

jobs:
  generate_migrations:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: | 
          echo "MIGRATION_FILE_PATH=migrations/migration-${{ github.event.release.tag_name }}.sql" >> $GITHUB_ENV
          echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          
      - name: Generate Migration Script
        env:
          ASPNETCORE_ENVIRONMENT: Production
        run: |
          dotnet tool install --global dotnet-ef
          dotnet tool restore
          dotnet ef migrations script -o "${{ env.MIGRATION_FILE_PATH }}" -i -v --project NoteAPI --startup-project NoteAPI

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Upload Migration Script to GCP Bucket
        id: upload-to-bucket
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: '${{ env.MIGRATION_FILE_PATH }}'
          destination: 'prod-note-app/migrations/'

      - name: Show Migration File Content and BUCKET URL
        run: |
          echo "Migration File Content:"
          cat "${{ env.MIGRATION_FILE_PATH }}"
          echo "File URL: https://console.cloud.google.com/storage/browser/_details/prod-note-app/${{ env.MIGRATION_FILE_PATH }};tab=live_object"

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: generate_migrations
    environment: prod
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/note-api:$RELEASE_TAG .
          docker tag ${{ secrets.DOCKER_USERNAME }}/note-api:$RELEASE_TAG ${{ secrets.DOCKER_USERNAME }}/note-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/note-api:$RELEASE_TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/note-api:latest
